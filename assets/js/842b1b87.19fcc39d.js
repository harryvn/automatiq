"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[9245],{17800:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"selenium-webdriver/basics/waits/common-waits-examples","title":"Common Waits","description":"Below are examples of how to use common waits in Selenium WebDriver.","source":"@site/docs/selenium-webdriver/basics/waits/03-common-waits-examples.md","sourceDirName":"selenium-webdriver/basics/waits","slug":"/common-waits-examples","permalink":"/automatiq-docs/docs/common-waits-examples","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":3,"frontMatter":{"id":"common-waits-examples","title":"Common Waits","pagination_label":"Common Waits Examples","slug":"/common-waits-examples","sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"WebDriverWait & ExpectedConditions","permalink":"/automatiq-docs/docs/expected-conditions"},"next":{"title":"Element Visibility & Presence Examples","permalink":"/automatiq-docs/docs/visibility-and-presence-examples"}}');var o=i(74848),a=i(28453);const r={id:"common-waits-examples",title:"Common Waits",pagination_label:"Common Waits Examples",slug:"/common-waits-examples",sidebar_position:3},s="Common Waits",l={},m=[{value:"Implicit Wait",id:"implicit-wait",level:2},{value:"Explicit Wait",id:"explicit-wait",level:2},{value:"Fluent Wait",id:"fluent-wait",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"common-waits",children:"Common Waits"})}),"\n",(0,o.jsx)(n.p,{children:"Below are examples of how to use common waits in Selenium WebDriver."}),"\n",(0,o.jsx)(n.h2,{id:"implicit-wait",children:"Implicit Wait"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport java.time.Duration;\n\npublic class ImplicitWaitExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Set Implicit Wait (applies globally)\n            //highlight-start\n            driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));\n            //highlight-end\n\n            // Navigate to the page\n            driver.get("https://the-internet.herokuapp.com/login");\n\n            // Click the "Login" button\n            WebElement loginButton = driver.findElement(\n                By.cssSelector(".fa.fa-2x.fa-sign-in"));\n\n            loginButton.click();\n\n        } catch (Exception e) {\n            System.out.println("Exception occurred: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"info",children:(0,o.jsx)(n.p,{children:"Implicit wait is a global setting that applies to all element-finding operations performed by the WebDriver."})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["In the example above, we use a ",(0,o.jsx)(n.code,{children:"try-catch"})," block to handle exceptions. If the element is not found on the page within the globally set 10-second timeout, an exception will be thrown."]})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"explicit-wait",children:"Explicit Wait"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class ExplicitWaitExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the page\n            driver.get("https://the-internet.herokuapp.com/login");\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait until ExpectedConditions are met\n            WebElement loginButton = wait.until(\n                ExpectedConditions.elementToBeClickable(\n                    By.cssSelector(".fa.fa-2x.fa-sign-in")));\n            //highlight-end\n\n            // Click the "Login" button\n            loginButton.click();\n\n        } catch (Exception e) {\n            System.out.println("Exception occurred: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"fluent-wait",children:"Fluent Wait"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.ElementNotInteractableException;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.FluentWait;\nimport org.openqa.selenium.support.ui.Wait;\nimport java.time.Duration;\n\npublic class FluentWaitExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the page\n            driver.get("https://the-internet.herokuapp.com/login");\n\n            //highlight-start\n            // Define fluent wait\n            Wait<WebDriver> wait =\n                    new FluentWait<>(driver)\n                            .withTimeout(Duration.ofSeconds(2))\n                            .pollingEvery(Duration.ofMillis(300))\n                            .ignoring(ElementNotInteractableException.class);\n\n            // Wait until ExpectedConditions are met\n            WebElement loginButton = wait.until(\n                ExpectedConditions.elementToBeClickable(\n                    By.cssSelector(".fa.fa-2x.fa-sign-in")));\n            //highlight-end\n\n            // Click the "Login" button\n            loginButton.click();\n\n        } catch (Exception e) {\n            System.out.println("Exception occured: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var t=i(96540);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);