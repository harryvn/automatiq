"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[817],{28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var t=i(96540);const r={},o=t.createContext(r);function l(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(o.Provider,{value:n},e.children)}},80797:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>l,metadata:()=>t,toc:()=>m});const t=JSON.parse('{"id":"selenium-webdriver/basics/waits/visibility-and-presence-examples","title":"Visibility and Presence","description":"Below are examples of most common methods used to wait for element presence and visibility.","source":"@site/docs/selenium-webdriver/basics/waits/04-visibility-and-presence-examples.md","sourceDirName":"selenium-webdriver/basics/waits","slug":"/visibility-and-presence-examples","permalink":"/docs/visibility-and-presence-examples","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":4,"frontMatter":{"id":"visibility-and-presence-examples","title":"Visibility and Presence","pagination_label":"Element Visibility & Presence Examples","slug":"/visibility-and-presence-examples","sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Common Waits Examples","permalink":"/docs/common-waits-examples"},"next":{"title":"Element State Examples","permalink":"/docs/state-examples"}}');var r=i(74848),o=i(28453);const l={id:"visibility-and-presence-examples",title:"Visibility and Presence",pagination_label:"Element Visibility & Presence Examples",slug:"/visibility-and-presence-examples",sidebar_position:4},s=void 0,a={},m=[{value:"Element Visibility",id:"element-visibility",level:2},{value:"Waiting for an Element to Be Located",id:"waiting-for-an-element-to-be-located",level:3},{value:"Waiting for an Element to be Visible",id:"waiting-for-an-element-to-be-visible",level:3},{value:"Waiting for Visibility of All Elements",id:"waiting-for-visibility-of-all-elements",level:3},{value:"Waiting for Visibility of all elements by locator",id:"waiting-for-visibility-of-all-elements-by-locator",level:3},{value:"Waiting for an Element to be Invisible",id:"waiting-for-an-element-to-be-invisible",level:3},{value:"Element Presence",id:"element-presence",level:2},{value:"Waiting for an Element to Be Present",id:"waiting-for-an-element-to-be-present",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Below are examples of most common methods used to wait for element presence and visibility."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["This section will cover the most commonly used methods in practice; however, providing examples for each method mentioned ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"/docs/expected-conditions#visibility-and-presence",children:"here"})})," is beyond the scope of this guide."]})}),"\n",(0,r.jsx)(n.h2,{id:"element-visibility",children:"Element Visibility"}),"\n",(0,r.jsx)(n.h3,{id:"waiting-for-an-element-to-be-located",children:"Waiting for an Element to Be Located"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class VisibilityOfElementLocatedExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the page\n            driver.get("https://the-internet.herokuapp.com/dynamic_loading/1");\n\n            // Click the "Start" button\n            WebElement startButton = driver.findElement(By.cssSelector("#start button"));\n            startButton.click();\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait until the visibility of the element is located\n            WebElement element = wait.until(\n                ExpectedConditions.visibilityOfElementLocated(By.id("finish")));\n            //highlight-end\n\n            // Print the text of the element\n            System.out.println("Element text: " + element.getText());\n\n        } catch (Exception e) {\n            System.out.println("Exception occurred: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"waiting-for-an-element-to-be-visible",children:"Waiting for an Element to be Visible"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class VisibilityOfExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the website\n            driver.get("https://the-internet.herokuapp.com/dynamic_loading/1");\n\n            // Find the hidden element before clicking the button\n            WebElement hiddenElement = driver.findElement(By.id("finish"));\n\n            // Verify that the element is present but not visible initially\n            System.out.println(\n                "Is element displayed before loading: " + hiddenElement.isDisplayed());\n\n\n            // Click the start button to reveal the hidden element\n            WebElement startButton = driver.findElement(By.cssSelector("#start button"));\n            startButton.click();\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait until the element is visible\n            WebElement visibleElement = wait.until(\n                ExpectedConditions.visibilityOf(hiddenElement));\n            //highlight-end\n\n            // Print confirmation that the element is now visible\n            System.out.println(\n                "Is element displayed after loading: " + visibleElement.isDisplayed());\n\n            System.out.println("Element text: " + visibleElement.getText());\n\n        } catch (Exception e) {\n            System.out.println("Exception occurred: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"waiting-for-visibility-of-all-elements",children:"Waiting for Visibility of All Elements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\nimport java.util.List;\n\npublic class VisibilityOfAllElementsExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the website\n            driver.get("https://the-internet.herokuapp.com/tables");\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Find all rows in the first table\n            List<WebElement> tableRows = driver.findElements(\n                By.cssSelector("#table1 tbody tr"));\n\n            // Wait for all rows to be visible\n            List<WebElement> visibleRows = wait.until(\n                ExpectedConditions.visibilityOfAllElements(tableRows));\n            //highlight-end\n\n            // Print the number of visible rows\n            System.out.println("Number of visible rows: " + visibleRows.size());\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"waiting-for-visibility-of-all-elements-by-locator",children:"Waiting for Visibility of all elements by locator"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\nimport java.util.List;\n\npublic class VisibilityOfAllElementsLocatedByExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the website\n            driver.get("https://the-internet.herokuapp.com/tables");\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Find all rows in the first table\n            List<WebElement> tableRows = driver.findElements(\n                By.cssSelector("#table1 tbody tr"));\n\n            // Wait for all rows to be visible\n            List<WebElement> headers = wait.until(\n                ExpectedConditions.visibilityOfAllElementsLocatedBy(\n                    By.cssSelector("#table1 th")));\n            //highlight-end\n\n            // Print the header text from each visible header\n            System.out.println("Table headers:");\n            for (WebElement header : headers) {\n                System.out.println("- " + header.getText());\n            }\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"waiting-for-an-element-to-be-invisible",children:"Waiting for an Element to be Invisible"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class InvisibilityOfElementLocatedExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the webpage\n            driver.get("https://the-internet.herokuapp.com/dynamic_loading/1");\n\n            // Click the "Start" button\n            WebElement startButton = driver.findElement(By.cssSelector("#start button"));\n            startButton.click();\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait until the loading spinner disappears\n            wait.until(\n                ExpectedConditions.invisibilityOfElementLocated(By.id("loading")));\n\n            // Wait until "Hello World!" text becomes visible\n            WebElement finishElement = wait.until(\n                ExpectedConditions.visibilityOfElementLocated(By.id("finish")));\n            //highlight-end\n\n            // Get and print the text\n            System.out.println("Displayed message: " + finishElement.getText());\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"element-presence",children:"Element Presence"}),"\n",(0,r.jsx)(n.h3,{id:"waiting-for-an-element-to-be-present",children:"Waiting for an Element to Be Present"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class PresenceOfElementLocatedExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the webpage\n            driver.get("https://the-internet.herokuapp.com/dynamic_loading/2");\n\n            // Click the "Start" button\n            WebElement startButton = driver.findElement(By.cssSelector("#start button"));\n            startButton.click();\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait until the element with id \'finish\' is present in the DOM\n            WebElement finishElement = wait.until(\n                ExpectedConditions.presenceOfElementLocated(By.id("finish")));\n            //highlight-end\n\n            // Print the text\n            System.out.println("Element Text: " + finishElement.getText());\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n    }\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);