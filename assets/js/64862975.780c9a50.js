"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[8240],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>a});var i=n(96540);const r={},o=i.createContext(r);function l(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(o.Provider,{value:t},e.children)}},44060:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"selenium-webdriver/basics/waits/state-examples","title":"State","description":"Below are examples of most common methods used to wait and check the state of an element.","source":"@site/docs/selenium-webdriver/basics/waits/05-state-examples.md","sourceDirName":"selenium-webdriver/basics/waits","slug":"/state-examples","permalink":"/automatiq/docs/state-examples","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":5,"frontMatter":{"id":"state-examples","title":"State","pagination_label":"Element State Examples","slug":"/state-examples","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Element Visibility & Presence Examples","permalink":"/automatiq/docs/visibility-and-presence-examples"},"next":{"title":"Other ExpectedConditions Examples","permalink":"/automatiq/docs/other-expected-conditions"}}');var r=n(74848),o=n(28453);const l={id:"state-examples",title:"State",pagination_label:"Element State Examples",slug:"/state-examples",sidebar_position:5},a=void 0,s={},c=[{value:"Element State",id:"element-state",level:2},{value:"Waiting for an Element to Be Clickable",id:"waiting-for-an-element-to-be-clickable",level:3},{value:"Waiting for an Element to be Clickable by Locator",id:"waiting-for-an-element-to-be-clickable-by-locator",level:3},{value:"Waiting for an Element to Be Selected",id:"waiting-for-an-element-to-be-selected",level:3}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:"Below are examples of most common methods used to wait and check the state of an element."}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsxs)(t.p,{children:["This section will cover the most commonly used methods in practice; however, providing examples for each method mentioned ",(0,r.jsx)(t.strong,{children:(0,r.jsx)(t.a,{href:"/docs/expected-conditions#state",children:"here"})})," is beyond the scope of this guide."]})}),"\n",(0,r.jsx)(t.h2,{id:"element-state",children:"Element State"}),"\n",(0,r.jsx)(t.h3,{id:"waiting-for-an-element-to-be-clickable",children:"Waiting for an Element to Be Clickable"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class ElementToBeClickableExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the website\n            driver.get("https://the-internet.herokuapp.com/dynamic_controls");\n\n            // Click the "Enable" button which will enable a disabled input\n            WebElement enableButton = driver.findElement(\n                    By.xpath("//button[text()=\'Enable\']"));\n\n            // Click the "Enable" button\n            enableButton.click();\n\n            // Find the input element first\n            WebElement textInput = driver.findElement(\n                By.cssSelector("input[type=\'text\']"));\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait for the input field to become clickable\n            WebElement clickableInput = wait.until(\n                    ExpectedConditions.elementToBeClickable(textInput)\n            );\n            //highlight-end\n\n            // Interact with the input field\n            textInput.sendKeys("Now I can type here!");\n\n            System.out.println("Successfully entered text in the input field.");\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"waiting-for-an-element-to-be-clickable-by-locator",children:"Waiting for an Element to be Clickable by Locator"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class ElementToBeClickableExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the website\n            driver.get("https://the-internet.herokuapp.com/dynamic_controls");\n\n            // Click the "Enable" button which will enable a disabled input\n            WebElement enableButton = driver.findElement(\n                By.xpath("//button[text()=\'Enable\']"));\n\n            // Click the "Enable" button\n            enableButton.click();\n\n            //highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait for the input field to become clickable\n            WebElement inputField = wait.until(\n                    ExpectedConditions.elementToBeClickable(\n                        By.cssSelector("input[type=\'text\']"))\n            );\n            //highlight-end\n\n            // Interact with the input field\n            inputField.sendKeys("Now I can type here!");\n\n            System.out.println("Successfully entered text in the input field.");\n\n        } catch (Exception e) {\n            System.out.println("Exception occurred: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})}),"\n",(0,r.jsxs)(t.admonition,{type:"info",children:[(0,r.jsxs)(t.p,{children:["The difference between ",(0,r.jsx)(t.code,{children:"elementToBeClickable(By locator)"})," and ",(0,r.jsx)(t.code,{children:"elementToBeClickable(WebElement element)"})," lies in how the element is identified for waiting. Both methods ensure that the element is ",(0,r.jsx)(t.strong,{children:"visible and enabled"})," before considering it clickable, but they differ in when and how Selenium looks for the element."]}),(0,r.jsx)(t.hr,{}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"elementToBeClickable(By locator)"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["This method takes a locator (e.g., ",(0,r.jsx)(t.code,{children:'By.id("submit-button")'}),") as a parameter. Selenium searches for the element using this locator each time it checks if the condition is met. It is particularly useful when the element might be recreated in the ",(0,r.jsx)(t.code,{children:"DOM"}),", such as after a page refresh or an AJAX update. Once the element becomes clickable, it returns the corresponding ",(0,r.jsx)(t.code,{children:"WebElement"}),"."]}),"\n"]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"This approach is more resilient to DOM changes but might be slightly slower."})}),(0,r.jsx)(t.hr,{}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"elementToBeClickable(WebElement element)"})}),(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["This method takes a ",(0,r.jsx)(t.code,{children:"WebElement"})," that has already been located as a parameter. It uses the existing reference to the element, making it more efficient if the element remains stable in the ",(0,r.jsx)(t.code,{children:"DOM"}),". However, if the DOM structure changes, it may lead to a ",(0,r.jsx)(t.code,{children:"StaleElementReferenceException"}),", as the reference to the original element may no longer be valid. Once the element becomes clickable, the same ",(0,r.jsx)(t.code,{children:"WebElement"})," is returned."]}),"\n"]}),(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"This version is generally faster but requires the element to remain stable in the DOM."})})]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"waiting-for-an-element-to-be-selected",children:"Waiting for an Element to Be Selected"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",metastring:'title="Highlight Lines"',children:'import java.time.Duration;\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\n\npublic class ElementToBeSelectedExample {\n    public static void main(String[] args) {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n\n            // Navigate to the website\n            driver.get("https://the-internet.herokuapp.com/checkboxes");\n\n            // Find the checkbox elements (the second one is checked by default)\n            WebElement checkbox1 = driver.findElement(\n                By.cssSelector("input[type=\'checkbox\']:nth-of-type(1)"));\n\n            // Click the first checkbox to select it\n            checkbox1.click();\n\n            // highlight-start\n            // Define explicit wait\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n\n            // Wait for the checkbox to be selected\n            boolean isSelected = wait.until(\n                ExpectedConditions.elementToBeSelected(checkbox1));\n            //highlight-end\n\n            System.out.println("First checkbox is selected: " + isSelected);\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            // Close the browser\n            driver.quit();\n        }\n\n    }\n}\n'})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);