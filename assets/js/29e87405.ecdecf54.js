"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[4875],{28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var i=t(96540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}},85527:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"selenium-webdriver/basics/javascriptexecutor/javascriptexecutor-examples","title":"Examples","description":"This section provides examples of how to use the JavaScriptExecutor interface in Selenium WebDriver.","source":"@site/docs/selenium-webdriver/basics/javascriptexecutor/02-examples.md","sourceDirName":"selenium-webdriver/basics/javascriptexecutor","slug":"/javascriptexecutor-examples","permalink":"/automatiq/docs/javascriptexecutor-examples","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":2,"frontMatter":{"id":"javascriptexecutor-examples","title":"Examples","pagination_label":"JavaScriptExecutor Examples","slug":"/javascriptexecutor-examples","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"JavaScriptExecutor","permalink":"/automatiq/docs/javascriptexecutor-methods"},"next":{"title":"TakesScreenshot","permalink":"/automatiq/docs/takesscreenshot-methods"}}');var r=t(74848),s=t(28453);const a={id:"javascriptexecutor-examples",title:"Examples",pagination_label:"JavaScriptExecutor Examples",slug:"/javascriptexecutor-examples",sidebar_position:2},l="JavaScriptExecutor Examples",o={},c=[{value:"Filling Out a Form",id:"filling-out-a-form",level:2},{value:"Highlighting Elements",id:"highlighting-elements",level:2},{value:"Async Operation",id:"async-operation",level:2},{value:"Scrolling to an Element",id:"scrolling-to-an-element",level:2},{value:"Manipulating Hidden Elements to be Visible",id:"manipulating-hidden-elements-to-be-visible",level:2}];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"javascriptexecutor-examples",children:"JavaScriptExecutor Examples"})}),"\n",(0,r.jsx)(n.p,{children:"This section provides examples of how to use the JavaScriptExecutor interface in Selenium WebDriver."}),"\n",(0,r.jsx)(n.h2,{id:"filling-out-a-form",children:"Filling Out a Form"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.JavascriptExecutor;\n\npublic class FillOutFormExample {\n    public static void main(String[] args) {\n        // Initialize WebDriver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n            driver.get("https://the-internet.herokuapp.com/login");\n\n            // highlight-start\n            // Locate username and password fields\n            WebElement username = driver.findElement(By.id("username"));\n            WebElement password = driver.findElement(By.id("password"));\n\n            // Locate the button element\n            WebElement button = driver.findElement(By.className("radius"));\n\n            // Cast to JavascriptExecutor\n            JavascriptExecutor js = (JavascriptExecutor) driver;\n\n            // Set values using JS\n            js.executeScript("arguments[0].value=\'tomsmith\';", username);\n            js.executeScript("arguments[0].value=\'SuperSecretPassword!\';", password);\n\n            // Click the button using JS\n            js.executeScript("arguments[0].click();", button);\n            // highlight-end\n\n            Thread.sleep(2000);\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"highlighting-elements",children:"Highlighting Elements"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.JavascriptExecutor;\n\n\npublic class JsHighlightExample {\n    public static void main(String[] args) {\n        // Initialize WebDriver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n            driver.get("https://the-internet.herokuapp.com/login");\n\n            JavascriptExecutor js = (JavascriptExecutor) driver;\n\n            //highlight-start\n            // Locate elements\n            WebElement username = driver.findElement(By.id("username"));\n            WebElement password = driver.findElement(By.id("password"));\n            WebElement loginBtn = driver.findElement(By.className("radius"));\n\n            // Highlight username\n            highlightElement(js, username);\n            js.executeScript("arguments[0].value=\'tomsmith\';", username);\n\n            // Highlight password\n            highlightElement(js, password);\n            js.executeScript("arguments[0].value=\'SuperSecretPassword!\';", password);\n\n            // Highlight login button\n            highlightElement(js, loginBtn);\n            js.executeScript("arguments[0].click();", loginBtn);\n            //highlight-end\n\n            Thread.sleep(3000); // pause to see the result\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            driver.quit();\n        }\n    }\n\n    // Utility method to highlight element\n    private static void highlightElement(JavascriptExecutor js, WebElement element) throws InterruptedException {\n        // Add red border\n        js.executeScript("arguments[0].style.border=\'3px solid red\'", element);\n\n        // Flash effect\n        for (int i = 0; i < 2; i++) {\n            js.executeScript("arguments[0].style.backgroundColor=\'yellow\'", element);\n            Thread.sleep(300);\n            js.executeScript("arguments[0].style.backgroundColor=\'\'", element);\n            Thread.sleep(300);\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["In the above example, we highlight the username, password, and login button elements using ",(0,r.jsx)(n.code,{children:"JavaScriptExecutor"})," and then perform actions on them."]})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"highlightElement"})," whenever you want to visually confirm which element Selenium is interacting with."]}),(0,r.jsx)(n.p,{children:"It\u2019s very helpful for:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Debugging locator issues."}),"\n",(0,r.jsx)(n.li,{children:"Demoing test automation (stakeholders see exactly where Selenium clicks/enters data)."}),"\n"]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"async-operation",children:"Async Operation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport java.time.Duration;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.JavascriptExecutor;\n\npublic class AsyncOperationExample {\n    public static void main(String[] args) {\n        // Initialize WebDriver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n            driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));\n\n            driver.get("https://the-internet.herokuapp.com/dynamic_loading/1");\n\n            Thread.sleep(2000);\n\n            // highlight-start\n            // Click the "Start" button to trigger AJAX loading\n            driver.findElement(By.cssSelector("#start button")).click();\n\n            Thread.sleep(2000);\n\n            // Use executeAsyncScript to wait until AJAX completes\n            String result = (String) ((JavascriptExecutor) driver).executeAsyncScript(\n                    "var callback = arguments[arguments.length - 1];" +\n                            "var check = function() {" +\n                            "  var elem = document.querySelector(\'#finish\');" +\n                            "  if (elem && elem.style.display !== \'none\' && elem.innerText.trim() !== \'\') {" +\n                            "    callback(elem.innerText);" + // return the loaded text\n                            "  } else {" +\n                            "    setTimeout(check, 200);" + // keep polling every 200ms\n                            "  }" +\n                            "};" +\n                            "check();");\n\n            Thread.sleep(2000);\n\n            System.out.println("\u2705 Loaded text: " + result);\n            // highlight-end\n\n            Thread.sleep(2000);\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.admonition,{type:"tip",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"executeAsyncScript"})," is ideal when Selenium\u2019s ",(0,r.jsx)(n.code,{children:"WebDriverWait"})," doesn\u2019t directly capture AJAX or JS-driven UI changes, because you can implement custom waiting logic in JavaScript itself."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"scrolling-to-an-element",children:"Scrolling to an Element"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.JavascriptExecutor;\n\npublic class ScrollToElementExample {\n    public static void main(String[] args) {\n        // Initialize WebDriver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n            driver.get("https://the-internet.herokuapp.com/large");\n            JavascriptExecutor js = (JavascriptExecutor) driver;\n\n            // highlight-start\n            // Scroll to the top of the page\n            js.executeScript("window.scrollTo(0, 0);");\n            Thread.sleep(2000);\n            // \ud83d\udd3d Scroll down by pixels\n            js.executeScript("window.scrollBy(0, 500);");\n            Thread.sleep(2000);\n\n            // \ud83c\udfaf Scroll to a specific element\n            WebElement targetElement = driver.findElement(By.id("sibling-50.1"));\n            js.executeScript("arguments[0].scrollIntoView(true);", targetElement);\n            highlightElement(driver, targetElement); // \u2728 Highlight scrolled element\n            Thread.sleep(2000);\n\n            // \u2b07\ufe0f Scroll to the bottom of the page\n            js.executeScript("window.scrollTo(0, document.body.scrollHeight);");\n            // highlight-end\n\n            Thread.sleep(2000);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            driver.quit();\n        }\n    }\n\n    // \ud83d\udd26 Highlight helper\n    public static void highlightElement(WebDriver driver, WebElement element) throws InterruptedException {\n        JavascriptExecutor js = (JavascriptExecutor) driver;\n        js.executeScript("arguments[0].style.border=\'3px solid red\'", element);\n        Thread.sleep(1500);\n        js.executeScript("arguments[0].style.border=\'\'", element);\n    }\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"manipulating-hidden-elements-to-be-visible",children:"Manipulating Hidden Elements to be Visible"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.JavascriptExecutor;\n\npublic class ManipulateHiddenElementExample {\n    public static void main(String[] args) {\n        // Initialize WebDriver\n        WebDriver driver = new ChromeDriver();\n\n        try {\n            // Navigate to page with hidden element\n            driver.get("https://the-internet.herokuapp.com/dynamic_loading/1");\n\n            JavascriptExecutor js = (JavascriptExecutor) driver;\n\n            // highlight-start\n            // Locate the "Start" button which is visible\n            WebElement startButton = driver.findElement(By.cssSelector("#start button"));\n\n            // Click using JavaScript (instead of regular click)\n            js.executeScript("arguments[0].click();", startButton);\n\n            // Locate hidden element (Hello World!)\n            WebElement hiddenElement = driver.findElement(By.id("finish"));\n\n            // Make hidden element visible (removes display:none)\n            js.executeScript("arguments[0].style.display=\'block\';", hiddenElement);\n\n            // Highlight the now visible element\n            js.executeScript("arguments[0].style.border=\'3px solid red\'", hiddenElement);\n\n            // Print text\n            System.out.println("Hidden element text: " + hiddenElement.getText());\n            // highlight-end\n\n            Thread.sleep(2000); // Just to observe\n        } catch (Exception e) {\n            e.printStackTrace();\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsxs)(n.p,{children:["Using ",(0,r.jsx)(n.code,{children:"JavaScriptExecutor"})," to work with hidden elements should be a ",(0,r.jsx)(n.strong,{children:"last resort"}),".\nWhenever possible, use ",(0,r.jsx)(n.strong,{children:"explicit waits"})," (",(0,r.jsx)(n.code,{children:"WebDriverWait"}),") to wait until the element becomes visible."]}),(0,r.jsx)(n.p,{children:"Directly interacting with hidden elements can bypass the intended flow of the application."})]})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);