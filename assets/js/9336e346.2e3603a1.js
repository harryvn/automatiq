"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[1090],{11470:(e,n,t)=>{t.d(n,{A:()=>y});var i=t(96540),s=t(34164),r=t(23104),a=t(56347),o=t(205),l=t(57485),c=t(31682),d=t(70679);function h(e){return i.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,i.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:t}=e;return(0,i.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:t,default:i}})=>({value:e,label:n,attributes:t,default:i}))}(t);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,t])}function m({value:e,tabValues:n}){return n.some(n=>n.value===e)}function p({queryString:e=!1,groupId:n}){const t=(0,a.W6)(),s=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,l.aZ)(s),(0,i.useCallback)(e=>{if(!s)return;const n=new URLSearchParams(t.location.search);n.set(s,e),t.replace({...t.location,search:n.toString()})},[s,t])]}function x(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,r=u(e),[a,l]=(0,i.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const t=n.find(e=>e.default)??n[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r})),[c,h]=p({queryString:t,groupId:s}),[x,g]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[t,s]=(0,d.Dv)(n);return[t,(0,i.useCallback)(e=>{n&&s.set(e)},[n,s])]}({groupId:s}),j=(()=>{const e=c??x;return m({value:e,tabValues:r})?e:null})();(0,o.A)(()=>{j&&l(j)},[j]);return{selectedValue:a,selectValue:(0,i.useCallback)(e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),g(e)},[h,g,r]),tabValues:r}}var g=t(92303);const j={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var f=t(74848);function b({className:e,block:n,selectedValue:t,selectValue:i,tabValues:a}){const o=[],{blockElementScrollPositionUntilNextRender:l}=(0,r.a_)(),c=e=>{const n=e.currentTarget,s=o.indexOf(n),r=a[s].value;r!==t&&(l(n),i(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const t=o.indexOf(e.currentTarget)+1;n=o[t]??o[0];break}case"ArrowLeft":{const t=o.indexOf(e.currentTarget)-1;n=o[t]??o[o.length-1];break}}n?.focus()};return(0,f.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:i})=>(0,f.jsx)("li",{role:"tab",tabIndex:t===e?0:-1,"aria-selected":t===e,ref:e=>{o.push(e)},onKeyDown:d,onClick:c,...i,className:(0,s.A)("tabs__item",j.tabItem,i?.className,{"tabs__item--active":t===e}),children:n??e},e))})}function v({lazy:e,children:n,selectedValue:t}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===t);return e?(0,i.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,f.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,i.cloneElement)(e,{key:n,hidden:e.props.value!==t}))})}function k(e){const n=x(e);return(0,f.jsxs)("div",{className:(0,s.A)("tabs-container",j.tabList),children:[(0,f.jsx)(b,{...n,...e}),(0,f.jsx)(v,{...n,...e})]})}function y(e){const n=(0,g.A)();return(0,f.jsx)(k,{...e,children:h(e.children)},String(n))}},16789:e=>{e.exports=JSON.parse('{"permalink":"/blog/dockerising","source":"@site/blog/automation/selenium/java/2024-12-23-dockerising.md","title":"Part 3 - Dockerising Test Suite","description":"A Comprehensive Guide to Containerising Your Testing Framework","date":"2024-12-23T00:00:00.000Z","tags":[{"inline":false,"label":"Selenium","permalink":"/blog/tags/selenium","description":"Selenium tag description"},{"inline":false,"label":"Java","permalink":"/blog/tags/java","description":"Java tag description"},{"inline":false,"label":"TestNG","permalink":"/blog/tags/testng","description":"TestNG tag description"},{"inline":false,"label":"Maven","permalink":"/blog/tags/maven","description":"Maven tag description"},{"inline":false,"label":"Docker","permalink":"/blog/tags/docker","description":"Docker tag description"},{"inline":false,"label":"OpenJDK","permalink":"/blog/tags/openjdk","description":"OpenJDK tag description"}],"readingTime":10.53,"hasTruncateMarker":true,"authors":[{"name":"Hari Nair","title":"Test Architect","url":"https://github.com/harryvn","page":{"permalink":"/blog/authors/harryvn"},"socials":{"github":"https://github.com/harryvn","linkedin":"https://www.linkedin.com/in/harryvn/"},"imageURL":"https://github.com/harryvn.png","key":"harryvn"}],"frontMatter":{"slug":"dockerising","title":"Part 3 - Dockerising Test Suite","authors":["harryvn"],"tags":["selenium","java","testng","maven","docker","openjdk"]},"unlisted":false,"nextItem":{"title":"Part 2 - Packaging Framework","permalink":"/blog/packaging"}}')},19365:(e,n,t)=>{t.d(n,{A:()=>a});t(96540);var i=t(34164);const s={tabItem:"tabItem_Ymn6"};var r=t(74848);function a({children:e,hidden:n,className:t}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,i.A)(s.tabItem,t),hidden:n,children:e})}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(96540);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}},53433:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>h});var i=t(16789),s=t(74848),r=t(28453),a=t(11470),o=t(19365);const l={slug:"dockerising",title:"Part 3 - Dockerising Test Suite",authors:["harryvn"],tags:["selenium","java","testng","maven","docker","openjdk"]},c=void 0,d={authorsImageUrls:[void 0]},h=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Dockerfile",id:"dockerfile",level:2},{value:"Stage 1 Build",id:"stage-1-build",level:3},{value:"Stage 2 Build",id:"stage-2-build",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Directory Structure",id:"directory-structure",level:2},{value:"Build Docker Image",id:"build-docker-image",level:2},{value:"Run Tests",id:"run-tests",level:2},{value:"Conclusion",id:"conclusion",level:2},{value:"References",id:"references",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"A Comprehensive Guide to Containerising Your Testing Framework"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["In the previous ",(0,s.jsx)(n.a,{href:"/blog/packaging",children:"article"}),", we updated few files for packaging the project artefacts to ",(0,s.jsx)(n.code,{children:"JAR"})," files."]}),"\n",(0,s.jsxs)(n.p,{children:["In this article, we will add the ability to run the tests in a containerised environment using ",(0,s.jsx)(n.code,{children:"Docker"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["While there are several approaches to containerise the tests using ",(0,s.jsx)(n.code,{children:"Docker"}),", we will be using the ",(0,s.jsx)(n.code,{children:"Dockerfile"})," approach for our project."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["Before leveraging the extensive capabilities of ",(0,s.jsx)(n.code,{children:"Docker"})," & ",(0,s.jsx)(n.code,{children:"Dockerfile"}),", let's ensure we have it set up properly. Follow the official documentation ",(0,s.jsx)(n.a,{href:"https://docs.docker.com/engine/install/",children:"here"})," to install Docker according to your operating system. The primary goal is to showcase Docker's versatility without delving into exhaustive details beyond the scope of this discussion."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Multi-Stage Build"}),": Separates build and runtime environments to reduce image size and improve security."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Layer Caching Optimisation"}),": Uses efficient caching mechanisms for faster builds."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Security Best Practices"}),": Employs a non-root user and limited permissions in the runtime stage."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"Customisable Execution"}),": Configures runtime environment variables for flexible test execution."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"dockerfile",children:"Dockerfile"}),"\n",(0,s.jsxs)(n.p,{children:["Let's create a ",(0,s.jsx)(n.code,{children:"Dockerfile"})," for the project, this file will consist of a ",(0,s.jsx)(n.code,{children:"multi-stage"})," build process to ensure the application is built efficiently and the final image is lean and production-ready."]}),"\n",(0,s.jsx)(n.h3,{id:"stage-1-build",children:"Stage 1 Build"}),"\n",(0,s.jsxs)(n.p,{children:["Let's start with the first ",(0,s.jsx)(n.code,{children:"build"})," stage."]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsxs)(o.A,{value:"img1",label:"Step 1",children:[(0,s.jsx)(n.p,{children:"Base Image for first Build Stage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"FROM maven:3.8.1-openjdk-17-slim AS builder\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"FROM"})," command specifies the base image to use for the first build stage. It pulls a lightweight version of the Maven image with OpenJDK 17 to compile the project. The ",(0,s.jsx)(n.code,{children:"AS builder"})," part names this stage ",(0,s.jsx)(n.code,{children:"builder"})," for use in multi-stage Docker builds, typically where application code is compiled and packaged."]})]}),(0,s.jsxs)(o.A,{value:"metadata1",label:"Step 2",children:[(0,s.jsx)(n.p,{children:"Add Metadata Labels (Optional)"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:'LABEL maintainer="<Your Name & Email>" \\\n      version="<version number>" \\\n      description="<Short Description>"\n'})}),(0,s.jsxs)(n.p,{children:["The above ",(0,s.jsx)(n.code,{children:"LABEL"})," adds metadata to the image for documentation and maintenance purposes."]})]}),(0,s.jsxs)(o.A,{value:"wrkdir1",label:"Step 3",children:[(0,s.jsx)(n.p,{children:"Set Working Directory"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"WORKDIR /automation\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"WORKDIR"})," command specifies the working directory inside the container to ",(0,s.jsx)(n.code,{children:"/automation"}),". All subsequent commands, such as file copies or builds, will be executed within this directory. If the directory doesn't exist, it will be created."]})]}),(0,s.jsxs)(o.A,{value:"caching",label:"Step 4",children:[(0,s.jsx)(n.p,{children:"Optimise Layer Caching"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"COPY pom.xml .\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"COPY"})," command copies the ",(0,s.jsx)(n.code,{children:"pom.xml"})," file to the working directory of container to leverage Docker's layer caching."]})]}),(0,s.jsxs)(o.A,{value:"deps1",label:"Step 5",children:[(0,s.jsx)(n.p,{children:"Download Dependencies"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"RUN mvn dependency:go-offline -B --no-transfer-progress\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"RUN"})," command downloads all dependencies to reduce build time in subsequent steps unless there are changes in project source code."]})]}),(0,s.jsxs)(o.A,{value:"cp1",label:"Step 6",children:[(0,s.jsx)(n.p,{children:"Copy Project Files"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"COPY src ./src\nCOPY test-suites ./test-suites\nCOPY testng.xml ./testng.xml\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"COPY"})," command copies the entire ",(0,s.jsx)(n.code,{children:"src"})," & ",(0,s.jsx)(n.code,{children:"test-suites"})," to the working directory of container. Similarly, it copies the ",(0,s.jsx)(n.code,{children:"testng.xml"})," configuration file to the container. These commands ensure that the source code, test suites, and TestNG configuration are all available within the container for further processing or testing."]}),(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["We are copying ",(0,s.jsx)(n.code,{children:"testng.xml"})," as well so that if ",(0,s.jsx)(n.code,{children:"${testSuite}"})," is not provided, the tests will still run using the default suite."]})})]}),(0,s.jsxs)(o.A,{value:"pkg1",label:"Step 7",children:[(0,s.jsx)(n.p,{children:"Package the Application"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"RUN mvn clean package -DskipTests -B --no-transfer-progress \\\n    && rm -rf ~/.m2/repository\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"RUN"})," command compiles and packages the application, skipping tests for faster build and cleans up the local Maven repository to reduce image size."]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"stage-2-build",children:"Stage 2 Build"}),"\n",(0,s.jsxs)(n.p,{children:["Let's start with the second ",(0,s.jsx)(n.code,{children:"build"})," stage."]}),"\n",(0,s.jsxs)(a.A,{children:[(0,s.jsxs)(o.A,{value:"img2",label:"Step 1",children:[(0,s.jsx)(n.p,{children:"Base Image for Runtime"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"FROM bellsoft/liberica-openjdk-alpine:17.0.7-7\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"FROM"})," command specifies the base image to use for the second build stage. It pulls an lightweight Alpine-based image of BellSoft's Liberica OpenJDK 17."]})]}),(0,s.jsxs)(o.A,{value:"metadata2",label:"Step 2",children:[(0,s.jsx)(n.p,{children:"Add Metadata Labels (Optional)"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:'LABEL maintainer="<Your Name & Email>" \\\n      version="<version number>" \\\n      description="<Short Description>"\n'})}),(0,s.jsxs)(n.p,{children:["The above ",(0,s.jsx)(n.code,{children:"LABEL"})," adds metadata to the image for documentation and maintenance purposes."]})]}),(0,s.jsxs)(o.A,{value:"nonroot",label:"Step 3",children:[(0,s.jsx)(n.p,{children:"Create Non-Root User"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"RUN addgroup -S automation && adduser -S automation -G automation\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"RUN"})," command creates a system group named ",(0,s.jsx)(n.code,{children:"automation"})," and adds a system user with the same name as a member of that group. As a security best practice, always create a ",(0,s.jsx)(n.code,{children:"non-root"})," user to ensure the application runs with limited privileges, enhancing the container's security."]})]}),(0,s.jsxs)(o.A,{value:"wrkdir2",label:"Step 4",children:[(0,s.jsx)(n.p,{children:"Set Working Directory"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"WORKDIR /automation\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"WORKDIR"})," command specifies the working directory inside the container to ",(0,s.jsx)(n.code,{children:"/automation"}),". All subsequent commands, such as file copies or builds, will be executed within this directory. If the directory doesn't exist, it will be created."]})]}),(0,s.jsxs)(o.A,{value:"setperms",label:"Step 5",children:[(0,s.jsx)(n.p,{children:"Create Directories and Set Permissions"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"RUN mkdir -p /automation/logs /automation/test-output \\\n    && chown -R automation:automation /automation/logs /automation/test-output\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"RUN"})," command creates two directories (",(0,s.jsx)(n.code,{children:"logs"})," and ",(0,s.jsx)(n.code,{children:"test-output"}),") within the ",(0,s.jsx)(n.code,{children:"/automation"})," folder and sets their ownership to the automation user and group. The ",(0,s.jsx)(n.code,{children:"-p"})," flag ensures parent directories are created if they don't exist, while ",(0,s.jsx)(n.code,{children:"chown -R"})," recursively assigns ownership permissions, establishing proper access rights for the application to write logs and test results."]})]}),(0,s.jsxs)(o.A,{value:"cp2",label:"Step 6",children:[(0,s.jsx)(n.p,{children:"Copy Files from Builder Stage"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-Dockerfile",children:"COPY --from=builder --chown=automation:automation /automation/target/tafs/libs/ ./libs/\nCOPY --from=builder --chown=automation:automation /automation/test-suites/ ./test-suites/\nCOPY --from=builder --chown=automation:automation /automation/testng.xml ./testng.xml\n"})}),(0,s.jsxs)(n.p,{children:["These ",(0,s.jsx)(n.code,{children:"COPY"})," commands transfer specific files and directories from the ",(0,s.jsx)(n.code,{children:"builder"})," stage to the current stage in the Docker image. The first command copies the application libraries, the second copies test suites and the third copies the TestNG configuration file. By using ",(0,s.jsx)(n.code,{children:"--chown=automation:automation"}),", all copied files are immediately assigned to the automation user and group, ensuring proper access permissions for the application to execute tests."]})]}),(0,s.jsxs)(o.A,{value:"envar",label:"Step 7",children:[(0,s.jsx)(n.p,{children:"Define Environment Variables (Optional)"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ENV ENVIRONMENT=REMOTE \\\n    BROWSER=CHROME \\\n    GRID_URL=http://<selenium-grid-host-or-ip>:<port> \\\n    RECORD_VIDEO=false \\\n    HEADLESS=false \\\n    TEST_SUITE=Master.xml\n"})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ENV"})," configuration sets default environment variables for running Selenium tests in a remote environment. It specifies the ",(0,s.jsx)(n.code,{children:"browser"})," to be used as ",(0,s.jsx)(n.code,{children:"Chrome"}),", the ",(0,s.jsx)(n.code,{children:"Selenium Grid URL"})," for remote execution, and toggles options like ",(0,s.jsx)(n.code,{children:"video recording"})," and ",(0,s.jsx)(n.code,{children:"headless mode"}),". The ",(0,s.jsx)(n.code,{children:"test suite"})," to execute is defined as ",(0,s.jsx)(n.code,{children:"Master.xml"}),". This setup ensures flexibility and control over test execution parameters."]})]}),(0,s.jsxs)(o.A,{value:"entrypoint",label:"Step 8",children:[(0,s.jsx)(n.p,{children:"Set the Entry Point"}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'ENTRYPOINT ["sh", "-c", "java -cp \'libs/*\' -Denv=${ENVIRONMENT} \\\n    -Dbrowser=${BROWSER} \\\n    -DremoteSeleniumGridUrl=${GRID_URL} \\\n    -DrecordVideo=${RECORD_VIDEO} \\\n    -Dheadless=${HEADLESS} \\\n    org.testng.TestNG test-suites/${TEST_SUITE}"]\n'})}),(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"ENTRYPOINT"})," command sets the entry point for the container, specifying the command that runs when the container starts. It executes a Java command to run TestNG, specifying the classpath (",(0,s.jsx)(n.code,{children:"libs/*"}),"), environment variables (like ",(0,s.jsx)(n.code,{children:"${ENVIRONMENT}"}),", ",(0,s.jsx)(n.code,{children:"${BROWSER}"}),", and others), and the test suite to execute from the ",(0,s.jsx)(n.code,{children:"test-suites/"})," directory. This allows dynamic configuration of the test environment using variables passed at runtime."]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsx)(n.p,{children:"Below is the final Dockerfile that uses multi-stage builds with Maven and OpenJDK to ensure an optimised and secure environment for running test suites."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-dockerfile",children:'# Use the Maven image to compile the project\nFROM maven:3.8.1-openjdk-17-slim AS builder\n\n# Add metadata labels\nLABEL maintainer="<Your Name & Email>" \\\n      version="<version number>" \\\n      description="<Short Description>"\n\n# Set the working directory\nWORKDIR /automation\n\n# Optimize layer caching by copying only pom.xml first\nCOPY pom.xml .\n\n# Use specific maven goals and options for better performance\nRUN mvn dependency:go-offline -B --no-transfer-progress\n\n# Copy necessary project files\nCOPY src ./src\nCOPY test-suites ./test-suites\nCOPY testng.xml ./testng.xml\n\n# Package the application\nRUN mvn clean package -DskipTests -B --no-transfer-progress && rm -rf ~/.m2/repository\n\n# Use an openjdk image from bellsoft\nFROM bellsoft/liberica-openjdk-alpine:17.0.7-7\n\n# Add metadata labels\nLABEL maintainer="<Your Name & Email>" \\\n      version="<version number>" \\\n      description="<Short Description>"\n\n# Create non-root user for security\nRUN addgroup -S automation && adduser -S automation -G automation\n\n# Set the working directory\nWORKDIR /automation\n\n# Create logs and test-output directories and set permissions\nRUN mkdir -p /automation/logs /automation/test-output && chown -R automation:automation /automation/logs /automation/test-output\n\n# Copy only required files from builder stage\nCOPY --from=builder --chown=automation:automation /automation/target/tafs/libs/ ./libs/\nCOPY --from=builder --chown=automation:automation /automation/test-suites/ ./test-suites/\nCOPY --from=builder --chown=automation:automation /automation/testng.xml ./testng.xml\n\n# Define environment variables with defaults\nENV ENVIRONMENT=REMOTE \\\n    BROWSER=CHROME \\\n    GRID_URL=http://<selenium-grid-host-or-ip>:<port> \\\n    RECORD_VIDEO=false \\\n    HEADLESS=false \\\n    TEST_SUITE=Master.xml\n\n# Set the entry point\nENTRYPOINT ["sh", "-c", "java -cp \'libs/*\' -Denv=${ENVIRONMENT} -Dbrowser=${BROWSER} -DremoteSeleniumGridUrl=${GRID_URL} -DrecordVideo=${RECORD_VIDEO} -Dheadless=${HEADLESS} org.testng.TestNG test-suites/${TEST_SUITE}"]\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Description"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"ENVIRONMENT"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"REMOTE "})}),(0,s.jsx)(n.td,{children:"Test environment (e.g., LOCAL or REMOTE)."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"BROWSER"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"CHROME"})}),(0,s.jsx)(n.td,{children:"Browser for test execution."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"GRID_URL"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"http://<selenium-grid-host-or-ip>:<port>"})}),(0,s.jsx)(n.td,{children:"Selenium Grid URL for remote execution."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"RECORD_VIDEO"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Enable/disable video recording."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"HEADLESS"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"false"})}),(0,s.jsx)(n.td,{children:"Run browser in headless mode."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"TEST_SUITE"})}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"Master.xml"})}),(0,s.jsx)(n.td,{children:"TestNG suite file to execute."})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"directory-structure",children:"Directory Structure"}),"\n",(0,s.jsx)(n.p,{children:"The container maintains the following structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"/automation/\n\u251c\u2500\u2500 libs/          # Application dependencies\n\u251c\u2500\u2500 test-suites/   # TestNG suite files\n\u251c\u2500\u2500 testng.xml     # TestNG configuration\n\u251c\u2500\u2500 logs/          # Test execution logs\n\u2514\u2500\u2500 test-output/   # Test results and reports\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"build-docker-image",children:"Build Docker Image"}),"\n",(0,s.jsx)(n.p,{children:"Next, to run the tests inside the container, we need to build the Docker image first."}),"\n",(0,s.jsx)(n.p,{children:"Let's run the following command to build the Docker image."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker build -t tafs-automation:1.0 .\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above command builds a Docker image from the Dockerfile located in the current directory (",(0,s.jsx)(n.code,{children:"."}),"). The ",(0,s.jsx)(n.code,{children:"-t "}),"flag tags the image with the name ",(0,s.jsx)(n.code,{children:"tafs-automation"})," and assigns the version ",(0,s.jsx)(n.code,{children:"1.0"}),", making it easier to reference and manage the image later."]}),"\n",(0,s.jsx)(n.p,{children:"Below is the command in action."}),"\n",(0,s.jsx)("img",{src:t(76160).A,alt:"build"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Run command ",(0,s.jsx)(n.code,{children:"docker image ls"})," to confirm the image is built successfully."]})}),"\n",(0,s.jsx)("img",{src:t(74996).A,alt:"dkrimg"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"run-tests",children:"Run Tests"}),"\n",(0,s.jsx)(n.p,{children:"We are all set to execute the tests inside Docker container using the image we built in previous step."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"docker run -d --rm --name tafs -e ENVIRONMENT=REMOTE -e BROWSER=CHROME -e GRID_URL=http://<selenium-grid-host-or-ip>:<port> -e RECORD_VIDEO=false -e HEADLESS=false -e TEST_SUITE=LoginPage.xml tafs-automation:1.0\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The above command launches a new container named ",(0,s.jsx)(n.code,{children:"tafs"})," from the ",(0,s.jsx)(n.code,{children:"tafs-automation:1.0"})," image. The ",(0,s.jsx)(n.code,{children:"-d"})," flag ensures the container starts in detached mode and ",(0,s.jsx)(n.code,{children:"--rm"})," flag ensures the container is automatically removed after it stops running. Various environment variables are passed using flag ",(0,s.jsx)(n.code,{children:"-e"})," to configure the test execution: ",(0,s.jsx)(n.code,{children:"ENVIRONMENT"})," is set to ",(0,s.jsx)(n.code,{children:"REMOTE"}),", ",(0,s.jsx)(n.code,{children:"BROWSER"})," to ",(0,s.jsx)(n.code,{children:"CHROME"}),", ",(0,s.jsx)(n.code,{children:"GRID_URL"})," to ",(0,s.jsx)(n.code,{children:"http://<selenium-grid-host-or-ip>:<port>"}),", and options for video recording and headless mode are specified as ",(0,s.jsx)(n.code,{children:"false"}),". Finally, ",(0,s.jsx)(n.code,{children:"TEST_SUITE"})," is set to ",(0,s.jsx)(n.code,{children:"LoginPage.xml"}),", indicating which test suite to execute."]}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["Run command ",(0,s.jsx)(n.code,{children:"docker container ls -a"})," to confirm the container is up and running."]})}),"\n",(0,s.jsx)("img",{src:t(75510).A,alt:"docker-container"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("img",{src:t(94707).A,alt:"live-preview"}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["To configure a Selenium Grid on your system to execute automation scripts, please refer to this ",(0,s.jsx)(n.a,{href:"/blog/docker",children:"section"})," of my another article, which demonstrates how to set up a Selenium Grid on local or remote systems."]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"In this article, we have effectively incorporated Docker into our testing workflow by developing a Dockerfile and building a Docker image. This method enables us to execute tests in a containerised environment, ensuring consistency and reliability across various systems. By following the steps detailed, we have produced a lightweight and production-ready Docker image capable of running our test suites with multiple configurations. This setup not only simplifies our testing process but also improves scalability and maintainability, making it more manageable to execute tests across different environments."}),"\n",(0,s.jsxs)(n.p,{children:["The source code is available on ",(0,s.jsx)(n.a,{href:"https://github.com/harryvn/selenium-automation-framework-java",children:"GitHub"}),". If you find the framework helpful, be sure to star the repository to show your support!"]}),"\n",(0,s.jsxs)(n.p,{children:["In the next ",(0,s.jsx)(n.code,{children:"article"}),", we will advance the project by introducing ",(0,s.jsx)(n.code,{children:"Jenkins"})," CI/CD tool to configure various stages of the Docker process, including executing automation scripts as part of the pipeline."]}),"\n",(0,s.jsxs)(n.p,{children:["If you find this article helpful or have any suggestions, reach out to me on ",(0,s.jsx)(n.a,{href:"https://www.linkedin.com/in/harryvn/",children:"LinkedIn"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Thank you and keep learning!"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://docs.docker.com/",children:"Docker"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://www.selenium.dev/",children:"Selenium"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://testng.org/",children:"TestNG"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://maven.apache.org/guides/index.html",children:"Maven"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://openjdk.org/",children:"OpenJDK"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},74996:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/docker-image-0f273340e8afd8ad27569dc975c23494.avif"},75510:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/docker-container-5cdd676ddd6bd09742f23111057beca7.avif"},76160:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/build-4d8c02984068e6e33d25e510369a5888.avif"},94707:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/live-preview-37c039de211d4affb5fd3552b1cf1713.avif"}}]);