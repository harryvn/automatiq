"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[7518],{28453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>s});var t=i(96540);const r={},o=t.createContext(r);function a(e){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),t.createElement(o.Provider,{value:n},e.children)}},60597:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"selenium-webdriver/basics/frames/frames-windows-examples","title":"Examples","description":"The following examples demonstrate how to use Selenium WebDriver to switch between frames and browser windows/tabs.","source":"@site/docs/selenium-webdriver/basics/frames/02-examples.md","sourceDirName":"selenium-webdriver/basics/frames","slug":"/frames-windows-examples","permalink":"/docs/frames-windows-examples","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":2,"frontMatter":{"id":"frames-windows-examples","title":"Examples","pagination_label":"Frames & Windows Examples","slug":"/frames-windows-examples","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Frames and Windows","permalink":"/docs/frames-and-windows"},"next":{"title":"Actions","permalink":"/docs/actions-methods"}}');var r=i(74848),o=i(28453);const a={id:"frames-windows-examples",title:"Examples",pagination_label:"Frames & Windows Examples",slug:"/frames-windows-examples",sidebar_position:2},s="Frames & Windows Examples",d={},l=[{value:"Switching to a Frame by Index",id:"switching-to-a-frame-by-index",level:2},{value:"Switching to a Frame by Name or ID",id:"switching-to-a-frame-by-name-or-id",level:2},{value:"Switching to a Frame by WebElement",id:"switching-to-a-frame-by-webelement",level:2},{value:"Switching Between Windows",id:"switching-between-windows",level:2}];function m(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"frames--windows-examples",children:"Frames & Windows Examples"})}),"\n",(0,r.jsx)(n.p,{children:"The following examples demonstrate how to use Selenium WebDriver to switch between frames and browser windows/tabs."}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["In these examples, we will use ",(0,r.jsx)(n.code,{children:"WebDriverWait"})," to ensure elements are present before interacting, and ",(0,r.jsx)(n.code,{children:"switchTo()"})," to change the context between frames and windows."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"switching-to-a-frame-by-index",children:"Switching to a Frame by Index"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class FrameByIndexExample {\n    public static void main(String[] args) {\n        WebDriver driver = new ChromeDriver();\n        try {\n            // Navigate to the nested frames page\n            driver.get("https://the-internet.herokuapp.com/nested_frames");\n\n            // highlight-start\n            // Switch to the top frame (index 0)\n            driver.switchTo().frame(0);\n\n            // Switch to the middle frame within the top frame\n            driver.switchTo().frame("frame-middle");\n\n            // Wait for the content and print it\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n            WebElement content = wait.until(\n                ExpectedConditions.presenceOfElementLocated(By.id("content"))\n            );\n            System.out.println("Frame content: " + content.getText());\n\n            // Switch back to the default content\n            driver.switchTo().defaultContent();\n            // highlight-end\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"switching-to-a-frame-by-name-or-id",children:"Switching to a Frame by Name or ID"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class FrameByNameOrIdExample {\n    public static void main(String[] args) {\n        WebDriver driver = new ChromeDriver();\n        try {\n            // Navigate to the iframe page\n            driver.get("https://the-internet.herokuapp.com/iframe");\n\n            // highlight-start\n            // Switch to the iframe using its ID\n            driver.switchTo().frame("mce_0_ifr");\n\n            // Wait for the text editor and update its content\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n            WebElement editor = wait.until(\n                ExpectedConditions.presenceOfElementLocated(By.id("tinymce"))\n            );\n            editor.clear();\n            editor.sendKeys("Editing via Frame by Name/ID!");\n            // highlight-end\n\n            // Switch back to default content\n            driver.switchTo().defaultContent();\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"switching-to-a-frame-by-webelement",children:"Switching to a Frame by WebElement"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\n\npublic class FrameByWebElementExample {\n    public static void main(String[] args) {\n        WebDriver driver = new ChromeDriver();\n        try {\n            // Navigate to the frames page\n            driver.get("https://the-internet.herokuapp.com/iframe");\n\n            // highlight-start\n            // Locate the iframe WebElement\n            WebElement iframeElement = driver.findElement(By.id("mce_0_ifr"));\n\n            // Switch to the iframe\n            driver.switchTo().frame(iframeElement);\n\n            // Interact with the text editor inside the frame\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n            WebElement editor = wait.until(\n                ExpectedConditions.presenceOfElementLocated(By.id("tinymce"))\n            );\n            editor.clear();\n            editor.sendKeys("Hello from Selenium!");\n            // highlight-end\n\n            // Switch back to default content\n            driver.switchTo().defaultContent();\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"switching-between-windows",children:"Switching Between Windows"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport org.openqa.selenium.support.ui.ExpectedConditions;\nimport org.openqa.selenium.support.ui.WebDriverWait;\nimport java.time.Duration;\nimport java.util.Set;\n\npublic class WindowSwitchExample {\n    public static void main(String[] args) {\n        WebDriver driver = new ChromeDriver();\n        try {\n            // Navigate to the multiple windows page\n            driver.get("https://the-internet.herokuapp.com/windows");\n\n            // highlight-start\n            // Store the original window handle\n            String originalWindow = driver.getWindowHandle();\n\n            // Click the link to open a new window\n            WebElement clickHere = driver.findElement(By.linkText("Click Here"));\n            clickHere.click();\n\n            // Wait for the new window\n            WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));\n            wait.until(ExpectedConditions.numberOfWindowsToBe(2));\n\n            // Switch to the new window\n            Set<String> windowHandles = driver.getWindowHandles();\n            for (String handle : windowHandles) {\n                if (!handle.equals(originalWindow)) {\n                    driver.switchTo().window(handle);\n                    break;\n                }\n            }\n\n            // Print the header text in the new window\n            WebElement header = wait.until(\n                ExpectedConditions.presenceOfElementLocated(By.tagName("h3"))\n            );\n            System.out.println("New window header: " + header.getText());\n\n            // Switch back to the original window\n            driver.switchTo().window(originalWindow);\n            // highlight-end\n\n        } catch (Exception e) {\n            System.out.println("Test failed: " + e.getMessage());\n        } finally {\n            driver.quit();\n        }\n    }\n}\n'})}),"\n",(0,r.jsxs)(n.admonition,{type:"tip",children:[(0,r.jsx)(n.p,{children:"When switching windows, always:"}),(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Store the original window handle."}),"\n",(0,r.jsx)(n.li,{children:"Wait for the number of windows to increase."}),"\n",(0,r.jsx)(n.li,{children:"Switch back to the original window when done."}),"\n"]})]})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}}}]);