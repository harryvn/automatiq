"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[5633],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>r});var t=i(96540);const o={},l=t.createContext(o);function s(e){const n=t.useContext(l);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(l.Provider,{value:n},e.children)}},59429:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"selenium-webdriver/basics/basics-010","title":"File Upload","description":"In this section, we will explore how to handle file uploads using Selenium WebDriver.","source":"@site/docs/selenium-webdriver/basics/14-file-upload.md","sourceDirName":"selenium-webdriver/basics","slug":"/basics-010","permalink":"/docs/basics-010","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":14,"frontMatter":{"id":"basics-010","title":"File Upload","slug":"/basics-010","sidebar_position":14}}');var o=i(74848),l=i(28453);const s={id:"basics-010",title:"File Upload",slug:"/basics-010",sidebar_position:14},r="File Upload",a={},d=[{value:"Handling File Uploads",id:"handling-file-uploads",level:2},{value:"Using <code>sendKeys</code> Method",id:"using-sendkeys-method",level:3},{value:"Using <code>Robot Class</code>",id:"using-robot-class",level:3},{value:"Handling Remote File Uploads",id:"handling-remote-file-uploads",level:2},{value:"Using <code>RemoteWebDriver</code>",id:"using-remotewebdriver",level:3}];function c(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"file-upload",children:"File Upload"})}),"\n",(0,o.jsx)(n.p,{children:"In this section, we will explore how to handle file uploads using Selenium WebDriver."}),"\n",(0,o.jsx)(n.h2,{id:"handling-file-uploads",children:"Handling File Uploads"}),"\n",(0,o.jsxs)(n.p,{children:["To handle file uploads, you can use the ",(0,o.jsx)(n.code,{children:"sendKeys"})," method to provide the file path or use the ",(0,o.jsx)(n.code,{children:"upload"})," method to upload a file from the local system."]}),"\n",(0,o.jsxs)(n.h3,{id:"using-sendkeys-method",children:["Using ",(0,o.jsx)(n.code,{children:"sendKeys"})," Method"]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"sendKeys"})," method is used to send the file path to the file input element. This method is straightforward and works well for most cases."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\npublic class FileUploadUsingSendKeysExample {\n    public static void main(String[] args) {\n\n        // Initialize the ChromeDriver\n        WebDriver driver = new ChromeDriver();\n\n        // Navigate to the file upload page\n        driver.get("https://example.com/file-upload");\n\n        // Locate the file upload element\n        WebElement uploadElement = driver.findElement(By.id("upload"));\n\n        // Provide the file path to the file upload element\n        uploadElement.sendKeys("/path/to/your/file.txt");\n\n        // Submit the form\n        WebElement submitButton = driver.findElement(By.id("submit"));\n        submitButton.click();\n\n        // Close the browser\n        driver.quit();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsxs)(n.h3,{id:"using-robot-class",children:["Using ",(0,o.jsx)(n.code,{children:"Robot Class"})]}),"\n",(0,o.jsx)(n.p,{children:"In some cases, you might need to use the Robot class to handle file uploads, especially when dealing with native OS file dialogs."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'import java.awt.AWTException;\nimport java.awt.Robot;\nimport java.awt.event.KeyEvent;\n\npublic class FileUploadWithRobot {\n    public static void main(String[] args) throws AWTException {\n\n        // Initialize the ChromeDriver\n        WebDriver driver = new ChromeDriver();\n\n        // Navigate to the file upload page\n        driver.get("https://example.com/file-upload");\n\n        // Locate the file upload element and click it to open the file dialog\n        WebElement uploadElement = driver.findElement(By.id("upload"));\n        uploadElement.click();\n\n        // Use Robot class to handle the file dialog\n        Robot robot = new Robot();\n        robot.delay(2000);\n\n        // Enter the file path\n        StringSelection filePath = new StringSelection("/path/to/your/file.txt");\n        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(filePath, null);\n\n        // Press CTRL+V to paste the file path\n        robot.keyPress(KeyEvent.VK_CONTROL);\n        robot.keyPress(KeyEvent.VK_V);\n        robot.keyRelease(KeyEvent.VK_V);\n        robot.keyRelease(KeyEvent.VK_CONTROL);\n\n        // Press ENTER to close the file dialog\n        robot.keyPress(KeyEvent.VK_ENTER);\n        robot.keyRelease(KeyEvent.VK_ENTER);\n\n        // Submit the form\n        WebElement submitButton = driver.findElement(By.id("submit"));\n        submitButton.click();\n\n        // Close the browser\n        driver.quit();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"handling-remote-file-uploads",children:"Handling Remote File Uploads"}),"\n",(0,o.jsx)(n.p,{children:"When working with remote WebDriver instances, such as those provided by Selenium Grid or cloud-based services like BrowserStack or Sauce Labs, handling file uploads requires a slightly different approach. These services often provide specific methods to handle file uploads."}),"\n",(0,o.jsxs)(n.h3,{id:"using-remotewebdriver",children:["Using ",(0,o.jsx)(n.code,{children:"RemoteWebDriver"})]}),"\n",(0,o.jsxs)(n.p,{children:["Here is an example of how to handle file uploads using ",(0,o.jsx)(n.code,{children:"RemoteWebDriver"})," with Selenium Grid:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-java",children:'```java\nimport org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.remote.DesiredCapabilities;\nimport org.openqa.selenium.remote.RemoteWebDriver;\n\nimport java.net.MalformedURLException;\nimport java.net.URL;\n\npublic class RemoteFileUploadExample {\n    public static void main(String[] args) throws MalformedURLException {\n        // Set the URL of the Selenium Grid hub\n        URL gridUrl = new URL("http://localhost:4444/wd/hub");\n\n        // Use ChromeOptions to configure the browser\n        ChromeOptions options = new ChromeOptions();\n\n        // Initialize the RemoteWebDriver\n        WebDriver driver = new RemoteWebDriver(gridUrl, options);\n\n        // Navigate to the file upload page\n        driver.get("https://example.com/file-upload");\n\n        // Locate the file upload element\n        WebElement uploadElement = driver.findElement(By.id("upload"));\n\n        // Provide the file path to the file upload element\n        uploadElement.sendKeys("/path/to/your/file.txt");\n\n        // Submit the form\n        WebElement submitButton = driver.findElement(By.id("submit"));\n        submitButton.click();\n\n        // Close the browser\n        driver.quit();\n    }\n}\n'})}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsx)(n.p,{children:"The above code is a simpler version, but you can enhance it by using WebDriverWait and ExpectedConditions to manage file upload more reliably and validate the file's existence before proceeding."})})]})}function p(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}}}]);