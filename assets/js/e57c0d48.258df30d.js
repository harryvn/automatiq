"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[195],{28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>l});var n=s(96540);const d={},i=n.createContext(d);function r(e){const t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:r(e.components),n.createElement(i.Provider,{value:t},e.children)}},75831:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>a,frontMatter:()=>r,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"selenium-webdriver/basics/webelements/webelements-methods","title":"Methods","description":"In Selenium WebDriver, WebElement is an interface that represents an HTML element on a web page. It provides various methods to interact with elements, such as clicking, sending text input, retrieving attributes, and more.","source":"@site/docs/selenium-webdriver/basics/webelements/01-methods.md","sourceDirName":"selenium-webdriver/basics/webelements","slug":"/webelements-methods","permalink":"/automatiq-docs/docs/webelements-methods","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":1,"frontMatter":{"id":"webelements-methods","title":"Methods","pagination_label":"WebElement Methods","slug":"/webelements-methods","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Locator Examples","permalink":"/automatiq-docs/docs/locator-examples"},"next":{"title":"Interaction Methods Examples","permalink":"/automatiq-docs/docs/interaction-methods"}}');var d=s(74848),i=s(28453);const r={id:"webelements-methods",title:"Methods",pagination_label:"WebElement Methods",slug:"/webelements-methods",sidebar_position:1},l="WebElements",c={},o=[{value:"Example Usage",id:"example-usage",level:2},{value:"Common WebElement Methods",id:"common-webelement-methods",level:2},{value:"Interaction Methods",id:"interaction-methods",level:3},{value:"State Check Methods",id:"state-check-methods",level:3},{value:"Property Methods",id:"property-methods",level:3},{value:"Other Methods",id:"other-methods",level:3},{value:"Shadow DOM Overview",id:"shadow-dom-overview",level:3}];function h(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",mermaid:"mermaid",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(t.header,{children:(0,d.jsx)(t.h1,{id:"webelements",children:"WebElements"})}),"\n",(0,d.jsx)(t.p,{children:"In Selenium WebDriver, WebElement is an interface that represents an HTML element on a web page. It provides various methods to interact with elements, such as clicking, sending text input, retrieving attributes, and more."}),"\n",(0,d.jsx)(t.h2,{id:"example-usage",children:"Example Usage"}),"\n",(0,d.jsx)(t.pre,{children:(0,d.jsx)(t.code,{className:"language-java",children:'WebElement element = driver.findElement(By.id("username"));\nelement.sendKeys("testuser");\n'})}),"\n",(0,d.jsx)(t.admonition,{type:"info",children:(0,d.jsxs)(t.p,{children:["Here, ",(0,d.jsx)(t.code,{children:"element"})," represents the input field with ",(0,d.jsx)(t.code,{children:'id="username"'}),", and ",(0,d.jsx)(t.code,{children:"sendKeys()"})," is used to enter text into it."]})}),"\n",(0,d.jsx)(t.h2,{id:"common-webelement-methods",children:"Common WebElement Methods"}),"\n",(0,d.jsx)(t.p,{children:"Below are some common WebElement methods used in Selenium WebDriver:"}),"\n",(0,d.jsx)(t.h3,{id:"interaction-methods",children:"Interaction Methods"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Method"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Usage"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"click()"})}),(0,d.jsx)(t.td,{children:"Clicks the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"element.click()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"sendKeys(text)"})}),(0,d.jsx)(t.td,{children:"Types text into the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:'element.sendKeys("Hello World")'})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"clear()"})}),(0,d.jsx)(t.td,{children:"Clears text from the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"element.clear()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"submit()"})}),(0,d.jsx)(t.td,{children:"Submits a form"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"element.submit()"})})]})]})]}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h3,{id:"state-check-methods",children:"State Check Methods"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Method"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Usage"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isDisplayed()"})}),(0,d.jsx)(t.td,{children:"Returns true if the element is visible"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"if (element.isDisplayed())"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isEnabled()"})}),(0,d.jsx)(t.td,{children:"Returns true if the element is enabled"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"if (element.isEnabled())"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"isSelected()"})}),(0,d.jsx)(t.td,{children:"Returns true if the element is selected (for checkboxes, radio buttons, options)"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"if (element.isSelected())"})})]})]})]}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h3,{id:"property-methods",children:"Property Methods"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Method"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Usage"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getText()"})}),(0,d.jsx)(t.td,{children:"Gets visible text of the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String text = element.getText()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getAttribute(name)"})}),(0,d.jsx)(t.td,{children:"Gets attribute value"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:'String val = element.getAttribute("class")'})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getDomAttribute(name)"})}),(0,d.jsx)(t.td,{children:"Gets DOM attribute as it is in the DOM"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:'String val = element.getDomAttribute("class")'})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getDomProperty(name)"})}),(0,d.jsx)(t.td,{children:"Gets DOM property"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:'String val = element.getDomProperty("innerText")'})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getCssValue(property)"})}),(0,d.jsx)(t.td,{children:"Gets value of specified CSS property"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:'String color = element.getCssValue("color")'})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getTagName()"})}),(0,d.jsx)(t.td,{children:"Gets tag name of the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String tag = element.getTagName()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getSize()"})}),(0,d.jsx)(t.td,{children:"Gets dimension of the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Dimension size = element.getSize()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getLocation()"})}),(0,d.jsx)(t.td,{children:"Gets location of the element"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Point location = element.getLocation()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getRect()"})}),(0,d.jsx)(t.td,{children:"Gets size and location as a rectangle"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Rectangle rect = element.getRect()"})})]})]})]}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.h3,{id:"other-methods",children:"Other Methods"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Method"}),(0,d.jsx)(t.th,{children:"Description"}),(0,d.jsx)(t.th,{children:"Usage"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getAccessibleName()"})}),(0,d.jsx)(t.td,{children:"Gets accessible name of the element (mostly used in accessibility tests)"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String name = element.getAccessibleName()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getAriaRole()"})}),(0,d.jsx)(t.td,{children:"Gets ARIA role of the element (mostly used in accessibility tests)"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"String role = element.getAriaRole()"})})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"getShadowRoot()"})}),(0,d.jsx)(t.td,{children:"Gets access to shadow DOM"}),(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"SearchContext shadow = element.getShadowRoot()"})})]})]})]}),"\n",(0,d.jsxs)(t.admonition,{type:"info",children:[(0,d.jsxs)(t.p,{children:["The ",(0,d.jsx)(t.code,{children:"getShadowRoot()"})," method is used to access the ",(0,d.jsx)(t.code,{children:"Shadow DOM"})," of an element. It returns a ",(0,d.jsx)(t.code,{children:"SearchContext"})," object, which can be used to interact with the shadow DOM elements."]}),(0,d.jsx)(t.p,{children:"Read below section for more details."})]}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsxs)(t.p,{children:["To gain a clearer understanding of the ",(0,d.jsx)(t.code,{children:"getShadowRoot()"})," method, we need to explore the concepts of ",(0,d.jsx)(t.strong,{children:"Shadow DOM"}),"."]}),"\n",(0,d.jsx)(t.h3,{id:"shadow-dom-overview",children:"Shadow DOM Overview"}),"\n",(0,d.jsxs)(t.p,{children:[(0,d.jsx)(t.strong,{children:"Shadow DOM"})," is a web standard that enables encapsulation of styles and behavior within a component, preventing unintended interference from the surrounding document."]}),"\n",(0,d.jsx)(t.p,{children:"It consists of several key components:"}),"\n",(0,d.jsxs)(t.table,{children:[(0,d.jsx)(t.thead,{children:(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.th,{children:"Component"}),(0,d.jsx)(t.th,{children:"Description"})]})}),(0,d.jsxs)(t.tbody,{children:[(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Shadow Host"})}),(0,d.jsx)(t.td,{children:"The regular DOM element that contains the shadow DOM."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Shadow Root"})}),(0,d.jsxs)(t.td,{children:["The entry point of the shadow tree, created using ",(0,d.jsx)(t.code,{children:"attachShadow()"})," on the shadow host."]})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Shadow Tree"})}),(0,d.jsx)(t.td,{children:"The internal structure of elements inside the shadow root, which remains isolated from the main document."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Encapsulation"})}),(0,d.jsx)(t.td,{children:"Elements inside the shadow tree do not inherit styles from the global document unless explicitly designed to do so."})]}),(0,d.jsxs)(t.tr,{children:[(0,d.jsx)(t.td,{children:(0,d.jsx)(t.code,{children:"Mode (Open/Closed)"})}),(0,d.jsx)(t.td,{children:"The shadow root can be open (accessible via JavaScript) or closed (restricted access)."})]})]})]}),"\n",(0,d.jsx)(t.hr,{}),"\n",(0,d.jsx)(t.mermaid,{value:'graph TD\n    A[Shadow Host] --\x3e|"attachShadow({mode: open/closed})"| B[Shadow Root]\n    B --\x3e|Creates| C[Shadow Tree]\n    C --\x3e|Encapsulated| D[Shadow DOM Elements]\n    D --\x3e E[Scoped CSS]\n    D --\x3e F[Isolated Events]\n\n    subgraph "Light DOM"\n        G[Regular Element 1]\n        H[Regular Element 2]\n        I[<slot name=\'x\'>]\n    end\n\n    subgraph "Shadow DOM"\n        B\n        C\n        D --\x3e J[<slot>]\n    end\n\n    G --\x3e|Slotted Content| I\n    I --\x3e|Projected into| J\n    H --\x3e|Non-slotted| B\n\n    B --\x3e|Mode| K{{"Open (accessible) / Closed (restricted)"}}\n    K --\x3e|Open| L["host.shadowRoot available"]\n    K --\x3e|Closed| M["host.shadowRoot === null"]\n\n    classDef light fill:#fff,stroke:#333,stroke-width:2px,color:#333;\n    classDef dark fill:#333,stroke:#fff,stroke-width:2px,color:#fff;'})]})}function a(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,d.jsx)(t,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}}}]);