"use strict";(self.webpackChunkautomatiq_docs=self.webpackChunkautomatiq_docs||[]).push([[6736],{28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var o=t(96540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}},62124:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>h});const o=JSON.parse('{"id":"selenium-webdriver/basics/webelements/other-methods","title":"Other Methods","description":"Taking a Screenshot of an Element","source":"@site/docs/selenium-webdriver/basics/webelements/05-other-methods-examples.md","sourceDirName":"selenium-webdriver/basics/webelements","slug":"/other-methods","permalink":"/automatiq-docs/docs/other-methods","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Hari Nair","lastUpdatedAt":1756995262000,"sidebarPosition":5,"frontMatter":{"id":"other-methods","title":"Other Methods","pagination_label":"Other Methods Examples","slug":"/other-methods","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Property Methods Examples","permalink":"/automatiq-docs/docs/property-methods"},"next":{"title":"Waits Types","permalink":"/automatiq-docs/docs/wait-types"}}');var i=t(74848),r=t(28453);const s={id:"other-methods",title:"Other Methods",pagination_label:"Other Methods Examples",slug:"/other-methods",sidebar_position:5},a=void 0,l={},h=[{value:"Taking a Screenshot of an Element",id:"taking-a-screenshot-of-an-element",level:2},{value:"Getting Aria Role of an Element",id:"getting-aria-role-of-an-element",level:2},{value:"Getting Shadow Root of an Element",id:"getting-shadow-root-of-an-element",level:2}];function d(e){const n={admonition:"admonition",code:"code",h2:"h2",hr:"hr",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"taking-a-screenshot-of-an-element",children:"Taking a Screenshot of an Element"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.OutputType;\nimport org.openqa.selenium.TakesScreenshot;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.chrome.ChromeDriver;\nimport java.io.File;\nimport java.io.IOException;\nimport java.nio.file.Files;\n\npublic class takeScreenshotExample {\n    public static void main( String[] args ) throws InterruptedException, IOException {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        // Open a webpage\n        driver.get("https://the-internet.herokuapp.com/login");\n\n        //highlight-start\n        // Cast WebDriver to TakesScreenshot\n        File screenshot = ((TakesScreenshot) driver).getScreenshotAs(OutputType.FILE);\n\n        // Define destination file\n        File destinationFile = new File("screenshot.png");\n\n        // Copy the screenshot to the destination\n        Files.copy(screenshot.toPath(), destinationFile.toPath());\n        //highlight-end\n\n        // Print the location of the screenshot\n        System.out.println("Screenshot saved: " + destinationFile.getAbsolutePath());\n\n        // Wait for 2 seconds\n        Thread.sleep(2000);\n\n        // Close the browser\n        driver.quit();\n\n    }\n}\n'})}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["In the above example, if the ",(0,i.jsx)(n.code,{children:"screenshot.png"})," file already exists, you will get an exception. You can handle this by checking if the file exists before copying the screenshot or by overwriting the existing file."]})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"getting-aria-role-of-an-element",children:"Getting Aria Role of an Element"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\npublic class getAriaRoleExample {\n    public static void main( String[] args ) throws InterruptedException {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        // Open a webpage\n        driver.get("https://the-internet.herokuapp.com/login");\n\n        //highlight-start\n        // Find the "Sign In" button\n        WebElement loginButton = driver.findElement(\n            By.cssSelector("button[type=\'submit\']"));\n\n        // Get the ARIA role of the element\n        String ariaRole = loginButton.getAriaRole();\n        //highlight-end\n\n        // Print the ARIA role of the element\n        System.out.println("ARIA Role of Login Button: " + ariaRole);\n\n        // Wait for 2 seconds\n        Thread.sleep(2000);\n\n        // Close the browser\n        driver.quit();\n\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h2,{id:"getting-shadow-root-of-an-element",children:"Getting Shadow Root of an Element"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'import org.openqa.selenium.By;\nimport org.openqa.selenium.WebDriver;\nimport org.openqa.selenium.WebElement;\nimport org.openqa.selenium.chrome.ChromeDriver;\n\npublic class getShadowRootExample {\n    public static void main( String[] args ) throws InterruptedException {\n\n        // Create a new instance of the Chrome driver\n        WebDriver driver = new ChromeDriver();\n\n        // Navigate to the page\n        driver.get("https://the-internet.herokuapp.com/shadowdom");\n\n        //highlight-start\n        // Locate the shadow host element\n        WebElement shadowHost = driver.findElement(By.xpath("//my-paragraph[2]"));\n\n        // Locate the shadow root element\n        WebElement shadowRoot = shadowHost.findElement(\n            By.cssSelector("li:nth-child(1)"));\n        //highlight-end\n\n        // Print text of the shadow root element\n        System.out.println("Element Text is: " + shadowRoot.getText());\n\n        // Close the browser\n        driver.quit();\n\n    }\n}\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);